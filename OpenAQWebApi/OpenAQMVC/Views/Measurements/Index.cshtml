@using OpenAQApiWrapper.Responses;
@using OpenAQApiWrapper.Entities;

@model PagedResultViewModel<MeasurementsFilterModel, LocationMeasurements>

<h1 class="display-4">Latest Measurements</h1>
@{
    await Html.RenderPartialAsync("_Filter", Model.PagingInfo.CurrentFilter);
}
<hr />
@{
    await Html.RenderPartialAsync("_PagingControls", Model.PagingInfo);
}
<table class="table table-striped table-dark table-hover">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Location</th>
            <th scope="col">City</th>
            <th scope="col">CountryCode</th>
            <th scope="col">Lat, Lon</th>
        </tr>
    </thead>
    <tbody>
        @{
            int index = 1;
        }

        @foreach (var locationMeasurements in Model.Results)
        {
            <tr>
                <td>@(((Model.PagingInfo.CurrentFilter.Page - 1) * Model.PagingInfo.CurrentFilter.PageSize) + index)</td>
                <td>@locationMeasurements.Location</td>
                <td>@locationMeasurements.City</td>
                <td>@locationMeasurements.CountryCode</td>
                <td>
                    @locationMeasurements.Coordinates.Latitude, @locationMeasurements.Coordinates.Longitude
                </td>
            </tr>
            <tr>
                <td colspan="5">
                    <ul>
                        @foreach(var measurement in locationMeasurements.Measurements.OrderBy(x => x.Parameter))
                        {
                            <li>
                                <strong>@measurement.Parameter: @measurement.Value</strong> @measurement.Unit (@measurement.LastUpdated)
                            </li>
                        }
                    </ul>
                </td>
            </tr>

            index++;
        }
    </tbody>
</table>
@{
    await Html.RenderPartialAsync("_PagingControls", Model.PagingInfo);
}
